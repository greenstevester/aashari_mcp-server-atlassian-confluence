name: Security

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: '0 2 * * *'

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  dependency-check:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Run npm audit
      run: npm audit --audit-level=high --json > audit-results.json || true
      
    - name: Parse audit results
      run: |
        if [ -s audit-results.json ]; then
          VULNERABILITIES=$(jq '.metadata.vulnerabilities.total' audit-results.json)
          if [ "$VULNERABILITIES" -gt 0 ]; then
            echo "Found $VULNERABILITIES vulnerabilities"
            npm audit --audit-level=high
            exit 1
          fi
        fi
        
    - name: Check for known security issues
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Run retire.js
      run: |
        npx retire --js --node --outputformat json --outputpath retire-results.json || true
        if [ -s retire-results.json ]; then
          cat retire-results.json
          # Check if any vulnerabilities were found
          if jq -e '.data | length > 0' retire-results.json > /dev/null; then
            echo "Security vulnerabilities found by retire.js"
            exit 1
          fi
        fi

  secrets-scan:
    name: Secrets Detection
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Run TruffleHog OSS
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified
        
  license-check:
    name: License Compliance
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Check licenses
      run: |
        npx license-checker-evergreen --onlyAllow 'MIT;Apache-2.0;Apache 2.0;BSD-2-Clause;BSD-3-Clause;ISC;0BSD;Unlicense;WTFPL;Python-2.0;CC0-1.0;CC-BY-3.0;CC-BY-4.0;BlueOak-1.0.0;Artistic-2.0' --excludePrivatePackages
        
    - name: Generate license report
      run: |
        npx license-checker --json > license-report.json
        echo "License report generated"
        
    - name: Upload license report
      uses: actions/upload-artifact@v4
      with:
        name: license-report
        path: license-report.json
        retention-days: 30

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [dependency-check, secrets-scan, license-check]
    if: always()
    
    steps:
    - name: Security Scan Summary
      run: |
        echo "## Security Scan Results" >> $GITHUB_STEP_SUMMARY
        echo "| Check | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| Dependency Check | ${{ needs.dependency-check.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Secrets Scan | ${{ needs.secrets-scan.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| License Check | ${{ needs.license-check.result }} |" >> $GITHUB_STEP_SUMMARY
        
        if [[ "${{ needs.codeql.result }}" == "failure" || "${{ needs.dependency-check.result }}" == "failure" || "${{ needs.secrets-scan.result }}" == "failure" ]]; then
          echo "❌ Security issues detected. Please review the failed checks above." >> $GITHUB_STEP_SUMMARY
          exit 1
        else
          echo "✅ All security checks passed!" >> $GITHUB_STEP_SUMMARY
        fi